plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'ec.edu.espe'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	jaxb
}

repositories {
	mavenCentral()
}

dependencies {
	jaxb "org.glassfish.jaxb:jaxb-xjc"
	jaxb "org.glassfish.jaxb:jaxb-runtime"

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.liquibase:liquibase-core'
	implementation 'wsdl4j:wsdl4j:1.6.3'
	implementation 'org.imgscalr:imgscalr-lib:4.2'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}


sourceSets {
	main {
		java {
			srcDir 'src/main/java'
			srcDir 'build/generated-sources/jaxb'
		}
	}
}

def addXjcTask(taskName, schema, pkg, dest) {
	file(dest).mkdirs()

	tasks.create(name: taskName, type: JavaExec) {
		classpath configurations.jaxb
		mainClass = 'com.sun.tools.xjc.XJCFacade'
		args schema, "-p", pkg, "-d", dest, "-no-header"
	}
}

addXjcTask("books-xsd",
		"src/main/resources/xsd/books.xsd",
		"ec.edu.espe.library.xjc",
		"build/generated-sources/jaxb")

addXjcTask("genres-xsd",
		"src/main/resources/xsd/genres.xsd",
		"ec.edu.espe.library.xjc",
		"build/generated-sources/jaxb")

addXjcTask("authors-xsd",
		"src/main/resources/xsd/authors.xsd",
		"ec.edu.espe.library.xjc",
		"build/generated-sources/jaxb")

tasks.register("generateSources") {
	description "Generate Java sources fram XSD files"
	dependsOn (
		tasks.getByName("authors-xsd"),
		tasks.getByName("genres-xsd"),
		tasks.getByName("books-xsd"),
	)
}